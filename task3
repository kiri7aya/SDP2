Task 3. Когда уместно использовать паттерн Decorator?
Паттерн Decorator (Декоратор) подходит в следующих случаях:

Когда нужно динамически добавлять новые обязанности объекту, не изменяя его класс.
Если необходимо гибко расширять функциональность объектов, сохраняя их интерфейс.
При создании цепочки объектов с различными комбинациями функциональности, избегая создания множества подклассов. Пример: добавление новых функций (например, шифрования, сжатия) в поток данных без изменения базового класса потока.
